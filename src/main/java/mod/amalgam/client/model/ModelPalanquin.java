package mod.amalgam.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.MathHelper;

public class ModelPalanquin extends ModelBase {
    public ModelRenderer body;
    public ModelRenderer base;
    public ModelRenderer cage;
    public ModelRenderer veil;
    public ModelRenderer seat;
    public ModelRenderer arm1;
    public ModelRenderer arm2;
    public ModelRenderer top1;
    public ModelRenderer top2;
    public ModelRenderer cap1;
    public ModelRenderer cap2;
    public ModelRenderer back1;
    public ModelRenderer back2;
    public ModelRenderer back3;
    public ModelRenderer topLeg1;
    public ModelRenderer topLeg2;
    public ModelRenderer topLeg3;
    public ModelRenderer topLeg4;
    public ModelRenderer bottomLeg1;
    public ModelRenderer bottomLeg2;
    public ModelRenderer bottomLeg3;
    public ModelRenderer bottomLeg4;
    public ModelPalanquin() {
        this.textureWidth = 256; this.textureHeight = 128;
        this.veil = new ModelRenderer(this, 74, 24);
        this.veil.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.veil.addBox(-11.0F, -36.0F, -11.0F, 22, 36, 22, 0.0F);
        this.cage = new ModelRenderer(this, 164, 18);
        this.cage.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.cage.addBox(-10.0F, -36.0F, -10.0F, 20, 36, 20, 0.0F);
        this.seat = new ModelRenderer(this, 184, 0);
        this.seat.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.seat.addBox(-4.0F, -10.0F, -4.0F, 8, 10, 8, 0.0F);
        this.arm1 = new ModelRenderer(this, 224, 0);
        this.arm1.mirror = true;
        this.arm1.setRotationPoint(4.0F, 0.0F, 0.0F);
        this.arm1.addBox(0.0F, -14.0F, -5.0F, 1, 14, 9, 0.0F);
        this.arm2 = new ModelRenderer(this, 224, 0);
        this.arm2.setRotationPoint(-4.0F, 0.0F, 0.0F);
        this.arm2.addBox(-1.0F, -14.0F, -5.0F, 1, 14, 9, 0.0F);
        this.top1 = new ModelRenderer(this, 0, 59);
        this.top1.setRotationPoint(0.0F, -38.0F, 0.0F);
        this.top1.addBox(-11.5F, 0.0F, -11.5F, 23, 2, 23, 0.0F);
        this.top2 = new ModelRenderer(this, 140, 24);
        this.top2.setRotationPoint(0.0F, 0.0F, 0.0F);
        this.top2.addBox(-5.0F, -3.0F, -5.0F, 10, 3, 10, 0.0F);
        this.topLeg1 = new ModelRenderer(this, 30, 26);
        this.topLeg1.setRotationPoint(12.0F, 0.0F, -12.0F);
        this.topLeg1.addBox(-1.5F, -20.0F, -1.5F, 3, 20, 3, 0.0F);
        this.topLeg1.rotateAngleX = 0.5235987755982988F;
        this.topLeg1.rotateAngleZ = 0.5235987755982988F;
        this.topLeg2 = new ModelRenderer(this, 30, 26);
        this.topLeg2.setRotationPoint(12.0F, 0.0F, 12.0F);
        this.topLeg2.addBox(-1.5F, -20.0F, -1.5F, 3, 20, 3, 0.0F);
        this.topLeg2.rotateAngleX = -0.5235987755982988F;
        this.topLeg2.rotateAngleZ = 0.5235987755982988F;
        this.topLeg3 = new ModelRenderer(this, 30, 26);
        this.topLeg3.setRotationPoint(-12.0F, 0.0F, 12.0F);
        this.topLeg3.addBox(-1.5F, -20.0F, -1.5F, 3, 20, 3, 0.0F);
        this.topLeg3.rotateAngleX = -0.5235987755982988F;
        this.topLeg3.rotateAngleZ = -0.5235987755982988F;
        this.topLeg4 = new ModelRenderer(this, 30, 26);
        this.topLeg4.setRotationPoint(-12.0F, 0.0F, -12.0F);
        this.topLeg4.addBox(-1.5F, -20.0F, -1.5F, 3, 20, 3, 0.0F);
        this.topLeg4.rotateAngleX = 0.5235987755982988F;
        this.topLeg4.rotateAngleZ = -0.5235987755982988F;
        this.bottomLeg1 = new ModelRenderer(this, 22, 26);
        this.bottomLeg1.setRotationPoint(0.0F, -21.0F, 0.0F);
        this.bottomLeg1.addBox(-1.0F, 0.0F, -1.0F, 2, 20, 2, 0.0F);
        this.bottomLeg1.rotateAngleX =  -0.5235987755982988F;
        this.bottomLeg1.rotateAngleZ = -0.5235987755982988F;
        this.bottomLeg2 = new ModelRenderer(this, 22, 26);
        this.bottomLeg2.setRotationPoint(0.0F, -21.0F, 0.0F);
        this.bottomLeg2.addBox(-1.0F, 0.0F, -1.0F, 2, 20, 2, 0.0F);
        this.bottomLeg2.rotateAngleX = 0.5235987755982988F;
        this.bottomLeg2.rotateAngleZ = -0.5235987755982988F;
        this.bottomLeg3 = new ModelRenderer(this, 22, 26);
        this.bottomLeg3.setRotationPoint(0.0F, -21.0F, 0.0F);
        this.bottomLeg3.addBox(-1.0F, 0.0F, -1.0F, 2, 20, 2, 0.0F);
        this.bottomLeg3.rotateAngleX = 0.5235987755982988F;
        this.bottomLeg3.rotateAngleZ = 0.5235987755982988F;
        this.bottomLeg4 = new ModelRenderer(this, 22, 26);
        this.bottomLeg4.setRotationPoint(0.0F, -21.0F, 0.0F);
        this.bottomLeg4.addBox(-1.0F, 0.0F, -1.0F, 2, 20, 2, 0.0F);
        this.bottomLeg4.rotateAngleX = -0.5235987755982988F;
        this.bottomLeg4.rotateAngleZ = 0.5235987755982988F;
        this.body = new ModelRenderer(this, 0, 0);
        this.body.setRotationPoint(0.0F, 20.0F, 0.0F);
        this.body.addBox(-12.0F, 0.0F, -12.0F, 24, 2, 24, 0.0F);
        this.body.rotateAngleY = 0.017453292519943295F;
        this.cap1 = new ModelRenderer(this, 0, 0);
        this.cap1.setRotationPoint(0.0F, -3.0F, 0.0F);
        this.cap1.addBox(-4.0F, -6.0F, 0.0F, 8, 6, 0, 0.0F);
        this.cap1.rotateAngleY = 0.7853981633974483F;
        this.cap2 = new ModelRenderer(this, 0, 0);
        this.cap2.setRotationPoint(0.0F, -3.0F, 0.0F);
        this.cap2.addBox(-4.0F, -6.0F, 0.0F, 8, 6, 0, 0.0F);
        this.cap2.rotateAngleY = -0.7853981633974483F;
        this.back1 = new ModelRenderer(this, 0, 26);
        this.back1.setRotationPoint(0.0F, 0.0F, 3.0F);
        this.back1.addBox(-5.0F, -24.0F, 1.0F, 10, 24, 1, 0.0F);
        this.back2 = new ModelRenderer(this, 72, 0);
        this.back2.setRotationPoint(0.0F, -19.1F, 0.8F);
        this.back2.addBox(0.0F, -9.0F, 0.0F, 9, 9, 1, 0.0F);
        this.back2.rotateAngleZ = -0.7853981633974483F;
        this.back3 = new ModelRenderer(this, 138, 0);
        this.back3.setRotationPoint(4.0F, -4.0F, -0.2F);
        this.back3.addBox(0.0F, -6.0F, 0.0F, 6, 6, 1, 0.0F);
        this.base = new ModelRenderer(this, 72, 0);
        this.base.setRotationPoint(0.0F, -2.0F, 0.0F);
        this.base.addBox(-11.0F, 0.0F, -11.0F, 22, 2, 22, 0.0F);
        this.base.addChild(this.veil);
        this.top1.addChild(this.top2);
        this.seat.addChild(this.arm2);
        this.topLeg4.addChild(this.bottomLeg4);
        this.base.addChild(this.cage);
        this.seat.addChild(this.arm1);
        this.topLeg3.addChild(this.bottomLeg3);
        this.back2.addChild(this.back3);
        this.top2.addChild(this.cap1);
        this.seat.addChild(this.back1);
        this.body.addChild(this.topLeg2);
        this.body.addChild(this.base);
        this.topLeg2.addChild(this.bottomLeg2);
        this.body.addChild(this.topLeg3);
        this.base.addChild(this.seat);
        this.back1.addChild(this.back2);
        this.top2.addChild(this.cap2);
        this.body.addChild(this.topLeg1);
        this.topLeg1.addChild(this.bottomLeg1);
        this.body.addChild(this.topLeg4);
        this.cage.addChild(this.top1);
    }
    public void resetRotationAngles() {
        this.topLeg1.rotateAngleX = 0.5235987755982988F;
        this.topLeg1.rotateAngleY = 0.0F;
        this.topLeg1.rotateAngleZ = 0.5235987755982988F;
        this.topLeg2.rotateAngleX = -0.5235987755982988F;
        this.topLeg2.rotateAngleY = 0.0F;
        this.topLeg2.rotateAngleZ = 0.5235987755982988F;
        this.topLeg3.rotateAngleX = -0.5235987755982988F;
        this.topLeg3.rotateAngleY = 0.0F;
        this.topLeg3.rotateAngleZ = -0.5235987755982988F;
        this.topLeg4.rotateAngleX = 0.5235987755982988F;
        this.topLeg4.rotateAngleY = 0.0F;
        this.topLeg4.rotateAngleZ = -0.5235987755982988F;
    }
    @Override
	public void setRotationAngles(float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scaleFactor, Entity entityIn) {
    	this.resetRotationAngles();
    	if (entityIn.onGround) {
	    	this.topLeg1.rotateAngleY +=  Math.abs(MathHelper.sin(limbSwing * 0.6662F + 3.14F) * 0.4F) * limbSwingAmount;
	    	this.topLeg2.rotateAngleY += -Math.abs(MathHelper.sin(limbSwing * 0.6662F + 3.14F) * 0.4F) * limbSwingAmount;
	    	this.topLeg3.rotateAngleY += -Math.abs(MathHelper.sin(limbSwing * 0.6662F + 0.0F) * 0.4F) * limbSwingAmount;
	    	this.topLeg4.rotateAngleY +=  Math.abs(MathHelper.sin(limbSwing * 0.6662F + 0.0F) * 0.4F) * limbSwingAmount;
	       	this.topLeg1.rotateAngleZ +=  MathHelper.cos(limbSwing * 0.6662F * 2.0F + 3.14F) * 0.4F * limbSwingAmount;
	    	this.topLeg2.rotateAngleZ += -MathHelper.cos(limbSwing * 0.6662F * 2.0F + 3.14F) * 0.4F * limbSwingAmount;
	    	this.topLeg3.rotateAngleZ +=  MathHelper.cos(limbSwing * 0.6662F * 2.0F + 0.0F) * 0.4F * limbSwingAmount;
	    	this.topLeg4.rotateAngleZ += -MathHelper.cos(limbSwing * 0.6662F * 2.0F + 0.0F) * 0.4F * limbSwingAmount;
    	}
    }
    @Override
    public void render(Entity entity, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headYaw, float scale) {
    	GlStateManager.pushMatrix();
        GlStateManager.translate(this.body.offsetX, this.body.offsetY, this.body.offsetZ);
        GlStateManager.translate(this.body.rotationPointX * scale, this.body.rotationPointY * scale, this.body.rotationPointZ * scale);
        GlStateManager.scale(2.0D, 2.0D, 2.0D);
        GlStateManager.translate(-this.body.offsetX, -this.body.offsetY, -this.body.offsetZ);
        GlStateManager.translate(-this.body.rotationPointX * scale, -this.body.rotationPointY * scale, -this.body.rotationPointZ * scale);
        this.body.render(scale);
        GlStateManager.popMatrix();
    }
}
